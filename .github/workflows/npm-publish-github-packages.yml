name: Release â€“ pnpm build, npm publish

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4     # install pnpm first  [oai_citation:11â€¡GitHub](https://github.com/actions/setup-node/issues/926?utm_source=chatgpt.com)
        with:
          version: 10
          run_install: true
      - uses: actions/setup-node@v4    # then Node + pnpm cache  [oai_citation:12â€¡docs.npmjs.com](https://docs.npmjs.com/cli/v8/configuring-npm/package-lock-json/?utm_source=chatgpt.com)
        with:
          node-version: 20
          cache: pnpm

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      # install deps (same order)
      - uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: true
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      # ðŸ”‘ top-level .npmrc that beats any rogue file
      - run: |
          echo "registry=https://npm.pkg.github.com/" > .npmrc
          echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
          echo "always-auth=true" >> .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish with npm
        run: npm publish --access public         # registry comes from env / file
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # env var is belt-and-braces; overrides everything
          NPM_CONFIG_REGISTRY: https://npm.pkg.github.com/
